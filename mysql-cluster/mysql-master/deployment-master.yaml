apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: bdd-as
  namespace: thierry-space
  labels:
    app: bdd-as
    role: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bdd-as
      role: master
  template:
    metadata:
      labels:
        app: bdd-as
        role: master
    spec:
      nodeSelector:
        isrootdns: "false"
        #tolerations:
        #- key: "isrootdns"
        #operator: "Equal"
        #value: "false"
        #effect: "NoSchedule"      
      containers:
        - name: master
          image: mysql:5.7
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: bdd-as
                  key: rootpass
          ports:
            - containerPort: 3306
              name: mysql
          livenessProbe:
            exec:
              command: ["mysqladmin", "ping", "-u" , "root","-pk8sadmin"]
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            exec:
              # Check we can execute queries over TCP (skip-networking is off).
              # Problem! ReadinessProbe don't evaluate env variable. I can't use $MySQL_ADMIN_USER
              command: ["mysql", "-u", "root", "-pk8sadmin", "-h", "127.0.0.1", "-e", "SELECT 1"]
            initialDelaySeconds: 5
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: data
              subPath: mysql-bdd-as
            - mountPath: /etc/mysql/conf.d
              name: config-master
        - name: config-master
          image: mysql:5.7
          command:
          - bash
          - /mnt/config/configMaster.sh
          env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: bdd-as
                key: rootpass
          - name: MYSQL_REP_USER
            valueFrom:
              secretKeyRef:
                name: bdd-as
                key: repuser
          - name: MYSQL_REP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: bdd-as
                key: reppass
          - name: MYSQL_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: bdd-as
                key: adminuser
          - name: MYSQL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: bdd-as
                key: adminpass
          volumeMounts:
          - mountPath: /mnt/config
            name: config          
      volumes:
        - name: data
          persistentVolumeClaim:
           claimName: dd-master
        - name: conf
          emptyDir: {}
        - name: config
          configMap:
            name: bdd-as
        - name: config-master
          configMap:
            name: mysql-master


